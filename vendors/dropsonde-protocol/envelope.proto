syntax = "proto2";

package events;

option go_package = "github.com/cloudfoundry/sonde-go/events";

option java_package = "org.cloudfoundry.dropsonde.events";
option java_outer_classname = "EventFactory";

import "http.proto";
import "log.proto";
import "metric.proto";
import "error.proto";

// Envelope wraps an Event and adds metadata.
message Envelope {
    // Type of the wrapped event.
    enum EventType {
        reserved 1 to 3;
        reserved "Heartbeat", "HttpStart", "HttpStop";
        HttpStartStop = 4;
        LogMessage = 5;
        ValueMetric = 6;
        CounterEvent = 7;
        Error = 8;
        ContainerMetric = 9;
    }

    // Unique description of the origin of this event.
    required string origin = 1;

    // Type of wrapped event. Only the optional field corresponding to the
    // value of eventType should be set.
    required EventType eventType = 2;

    // UNIX timestamp (in nanoseconds) event was wrapped in this Envelope.
    optional int64 timestamp = 6;

    // Deployment name (used to uniquely identify source).
    optional string deployment = 13;

    // Job name (used to uniquely identify source).
    optional string job = 14;

    // Index of job (used to uniquely identify source).
    optional string index = 15;

    // IP address (used to uniquely identify source).
    optional string ip = 16;

    // key/value tags to include additional identifying information.
    map<string, string> tags = 17;

    reserved 3 to 5;
    reserved "Heartbeat", "HttpStart", "HttpStop";

    optional HttpStartStop httpStartStop = 7;
    optional LogMessage logMessage = 8;
    optional ValueMetric valueMetric = 9;
    optional CounterEvent counterEvent = 10;
    optional Error error = 11;
    optional ContainerMetric containerMetric = 12;
}
